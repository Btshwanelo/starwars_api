{"version":3,"sources":["components/Navbar.js","components/Planet.js","components/Planets.js","components/Person.js","components/People.js","App.js","index.js"],"names":["Navbar","setPage","onClick","Planet","name","population","terrain","className","fetchPlanets","key","page","a","fetch","res","json","Planets","useState","usePaginatedQuery","staleTime","resolvedData","latestData","status","old","Math","max","disabled","next","results","map","planet","Person","gender","birth_year","fetchPeople","People","person","App","initialIsOpen","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d22d66be.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Navbar = ({setPage}) => {\r\n  return (\r\n    <nav>\r\n      <button onClick={() => setPage('planets')}>Planets</button>\r\n      <button onClick={() => setPage('people')}>People</button>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","const Planet = ({ name, population, terrain}) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <h3>{ name}</h3>\r\n            <p>Population - {population}</p>\r\n            <p>Terrain - { terrain}</p>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Planet;","import React, { useState } from \"react\";\r\nimport { usePaginatedQuery} from \"react-query\";\r\nimport Planet from './Planet';\r\n\r\n\r\nconst fetchPlanets = async (key, page) => {\r\n  const res = await fetch(`http://swapi.dev/api/planets//?page=${page}`);\r\n  return res.json();\r\n};\r\n\r\nconst Planets = () => {\r\n  const [page, setPage] = useState(1)\r\n  const {resolvedData, latestData,  status} = usePaginatedQuery([\"planets\", page], fetchPlanets, {\r\n    staleTime: 5000,\r\n  });\r\n \r\n  return (\r\n    <div>\r\n      <h2>Planets</h2>\r\n\r\n      {status === 'loading'&& (\r\n      <div>Loading...</div>\r\n      )}\r\n\r\n      {status === 'error' && (\r\n        <div>Error loading</div>\r\n      )}\r\n\r\n      {status === 'success' && (\r\n        <>\r\n         <button onClick={() => setPage(old => Math.max(old - 1, 1))} disabled={page === 1}> Previous page </button>\r\n        <span> {page} </span>\r\n        <button onClick={() => setPage( old => (!latestData || !latestData.next ? old : old +1))} disabled={!latestData || !latestData.next}> Next page </button>\r\n        \r\n        <div>\r\n          {resolvedData.results.map(planet => <Planet key={planet.name} name={planet.name} terrain={planet.terrain} population={planet.population}/> )}\r\n      </div>\r\n      </>\r\n      )}\r\n      </div>\r\n      \r\n  );\r\n};\r\n\r\nexport default Planets;\r\n","const Person = ({ name, gender, birth_year}) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <h3>{ name}</h3>\r\n            <p>Gender - {gender}</p>\r\n            <p>Birth year - { birth_year}</p>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Person;","import React, {useState} from \"react\";\r\nimport { usePaginatedQuery} from \"react-query\";\r\nimport Person from './Person';\r\n\r\n\r\nconst fetchPeople = async (key, page) => {\r\n  const res = await fetch(`https://swapi.dev/api/people/?page=${page}`);\r\n  return res.json();\r\n};\r\n\r\nconst People = () => {\r\n\r\n  const [page, setPage] = useState(1)\r\n  \r\n  const {resolvedData, latestData, status} = usePaginatedQuery([\"people\", page], fetchPeople, {\r\n    staleTime: 5000,\r\n  });\r\n \r\n  return (\r\n    <div>\r\n      <h2>People</h2>\r\n\r\n      {status === 'loading'&& (\r\n      <div>Loading...</div>\r\n      )}\r\n\r\n      {status === 'error' && (\r\n        <div>Error loading</div>\r\n      )}\r\n\r\n      {status === 'success' && (\r\n        <>\r\n        <button onClick={() => setPage(old => Math.max(old - 1, 1))} disabled={page === 1}> Previous page </button>\r\n        <span> {page} </span>\r\n        <button onClick={() => setPage( old => (!latestData || !latestData.next ? old : old +1))} disabled={!latestData || !latestData.next}> Next page </button>\r\n        <div>\r\n          {resolvedData.results.map(person => <Person key={person.name} name={person.name} gender={person.gender} population={person.birth_year}/> )}\r\n      </div>\r\n      </>\r\n      )}\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default People;\r\n","import React, {useState} from \"react\";\nimport Navbar from './components/Navbar';\nimport Planets from \"./components/Planets\";\nimport People from \"./components/People\";\nimport { ReactQueryDevtools } from \"react-query-devtools\";\n\n\n\nfunction App() {\n  const [page, setPage] = useState('planets')\n\n  return (\n    <>\n    <div className=\"App\">\n      <h1>Star Wars Info</h1>\n      <Navbar setPage= {setPage} />\n      <div className=\"content\">\n          {page === 'planets' ? <Planets /> : <People />}\n      </div>\n    </div>\n    <ReactQueryDevtools initialIsOpen={false}/>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}